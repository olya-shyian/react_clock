{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","setInterval","state","time","Date","this","setState","console","log","toLocaleTimeString","oldName","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"2OAWaA,EAAb,4MACEC,QAAwBC,aAAY,cAAU,GADhD,EAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,QAAUC,aAAY,WACzB,EAAKK,SAAS,CACZH,KAAM,IAAIC,OAIZG,QAAQC,IAAI,EAAKN,MAAMC,KAAKM,wBAC3B,OAfP,gCAkBE,YAA8C,IAAnBC,EAAkB,EAAxBC,KACXA,EAASN,KAAKO,MAAdD,KAEJD,IAAYC,GAEdJ,QAAQC,IAAR,qCAA0CE,EAA1C,eAAwDC,MAvB9D,kCA2BE,WACEE,cAAcR,KAAKL,WA5BvB,oBA+BE,WACE,IAAQG,EAASE,KAAKH,MAAdC,KAER,OACE,oBAAGW,UAAU,QAAb,UACG,iBACAX,EAAKM,4BArCd,GAA2BM,IAAMC,WCD3BC,G,kNACJf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,EAAsCd,KAAKH,MAAnCgB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACE,6CAECI,GAAkB,cAAC,EAAD,CAAOP,KAAMQ,IAEhC,wBACEL,UAAU,cACVM,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEY,gBAAgB,KAJpC,kBAUA,wBACEJ,UAAU,cACVM,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEY,gBAAgB,KAJpC,kBAUA,wBACEJ,UAAU,cACVM,KAAK,SACLC,QAAS,WACHH,GACF,EAAKZ,SAAS,CACZa,UAAWG,KAAKC,MAAsB,IAAhBD,KAAKE,aANnC,oC,GAnCUT,IAAMC,YAqDTC,IC5DfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5da8e345.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype State = {\n  time: Date;\n};\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  state = {\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date(),\n      });\n\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name: oldName }: Props) {\n    const { name } = this.props;\n\n    if (oldName !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p className=\"Clock\">\n        {'Current time: '}\n        {time.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Components/Clock';\n\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isClockVisible && <Clock name={clockName} />}\n\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show\n        </button>\n\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide\n        </button>\n\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => {\n            if (isClockVisible) {\n              this.setState({\n                clockName: Math.round(Math.random() * 1000),\n              });\n            }\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}